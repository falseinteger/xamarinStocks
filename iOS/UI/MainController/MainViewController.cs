// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Timers;

using Foundation;
using UIKit;

namespace Stocks.iOS
{
	public partial class MainViewController : UIViewController
	{
        //Таймер не глобальный так, что релизация происходит его здесь
        Timer timerUpdate;

		public MainViewController (IntPtr handle) : base (handle)
		{
            // Создаем обновлялку
            Core.ActionUpdate += () => {
                if (TableView == null)
                    return;

                if(Global.DataOfStocks != null)
                Console.WriteLine("[MainViewController] new data from:" + Global.DataOfStocks.AsOf.ToString("O"));
              
                InvokeOnMainThread(() => {
                    (TableView.Source as MainViewSource).UpdateItems(Global.DataOfStocks?.Stocks);

                    // Если у нас нет ячек тогда обновим все
                    if(TableView.IndexPathsForVisibleRows.Length == 0) {
                        TableView.ReloadData();
                        UIView.AnimateNotify(0.45, () => {
                            LabelInfoData.Alpha = 0.0f;
                            TableView.Alpha = 1.0f;
                        }, null);
                        return;
                    }

                    // Обновить только те ячейки которым мы видим
                    TableView.ReloadRows(TableView.IndexPathsForVisibleRows, UITableViewRowAnimation.Middle);
                });
                // Проверяем не остановился наш таймер
                if (!timerUpdate.Enabled)
                    timerUpdate.Start();
            };

            // 1 секунда = 1000 тиков
            timerUpdate = new Timer(15000);
            timerUpdate.Elapsed += (sender, e) => Core.StartUpdateStocks();
		}

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            TableView.EstimatedRowHeight = 50 * UIScreen.MainScreen.Scale;
            TableView.Source = new MainViewSource(null);
            TableView.ReloadData();

            ButtonRefreshing.Clicked += (sender, e) => {

                Console.WriteLine("[MainViewController] Manual get data:");

                // Останавливаем таймер
                timerUpdate.Stop();

                //Запускаем ручное обновление
                Core.StartUpdateStocks();
            };

            // Запускаем таймер обновлени каждые 15 секунд
            timerUpdate.Start();
        }

        public override void ViewDidDisappear(bool animated)
        {
            base.ViewDidDisappear(animated);

            //Останавливаем таймер если он работает
            timerUpdate.Stop();
            timerUpdate.Dispose();

            // Уничтажение действие на экране
            Core.ActionUpdate = null;
            // Закрываем работающие задачи
            Core.DisposeUpdateStocks();

        }

	}
}
